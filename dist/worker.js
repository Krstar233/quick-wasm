!function(){"use strict";function e(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var t,r;const s=e(r?t:(r=1,t=function(e){function t(e,t,r,s){function n(t){"function"!=typeof self.postMessage?e.ports[0].postMessage(t):self.postMessage(t)}r?("undefined"!=typeof console&&"error"in console&&console.error("Worker caught an error:",r),n([t,{message:r.message}])):n([t,null,s])}self.addEventListener("message",(function(r){var s=r.data;if(Array.isArray(s)&&2===s.length){var n=s[0],o=s[1];"function"!=typeof e?t(r,n,new Error("Please pass a function into register().")):function(e,r,s,n){var o,a=function(t,r){try{return{res:t(r)}}catch(e){return{err:e}}}(r,n);a.err?t(e,s,a.err):!(o=a.res)||"object"!=typeof o&&"function"!=typeof o||"function"!=typeof o.then?t(e,s,null,a.res):a.res.then((function(r){t(e,s,null,r)}),(function(r){t(e,s,r)}))}(r,e,n,o)}}))}));async function n(e,t,r){if(!window)throw new Error("load() should be run in the main thread");if(e.loaded)return;const s=window.exports;window.exports=Object.assign({},s),await import(
/* @vite-ignore */
t);const n=window.exports.Module;window.exports=s,e.loaded||(e.M=await n({locateFile:e=>e.endsWith("wasm")&&r?r:e,onRuntimeInitialized:()=>{e.loaded=!0}}))}const o=new class{constructor(){this.loaded=!1,this.load=n}loadCheck(){if(!this.loaded)throw new Error("WebAssembly is not loaded!")}call(e,t){const r=[],s=t.map((e=>{if("string"==typeof e){const t=this.M._malloc(2*e.length);return this.M.stringToUTF8(e,t,2*e.length),r.push(t),t}return e})),n=this.M["_"+e](...s)||!0;return r.forEach((e=>{this.M._free(e)})),n}getKeys(){const e=[];for(const t of Object.keys(this.M))t.startsWith("_")&&e.push(t.slice(1));return e}createHeap(e){const t=this.M._malloc(e.byteLength);return this.M.HEAP8.set(e,t),t}freeHeap(e){return this.M._free(e),!0}getHeap(e,t){return new Int8Array(this.M.HEAP8.subarray(e,e+t))}postMessage(e){switch(e.cmd){case"load":{const{args:t}=e;return n(this,t[0],t[1])}case"call":{this.loadCheck();const{args:t}=e,r=t[0],s=t[1];return this.call(r,s)}case"getKeys":return this.loadCheck(),this.getKeys();case"createHeap":{this.loadCheck();const{args:t}=e,r=t[0];return this.createHeap(r)}case"freeHeap":{this.loadCheck();const{args:t}=e,r=t[0];return this.freeHeap(r)}case"getHeap":{this.loadCheck();const{args:t}=e,r=t[0],s=t[1];return this.getHeap(r,s)}default:throw new Error("Unknown Message.")}}};async function a(e,t,r){if(!self)throw new Error("load() should be run in the worker thread");e.loaded||(importScripts(t),e.loaded||(e.M=self.M=await self.Module({locateFile:e=>e.endsWith("wasm")&&r?r:e,onRuntimeInitialized:()=>{e.loaded=!0}})))}o.load=a,s((async e=>{if("load"===e.cmd){const{args:t}=e;return await a(o,t[0],t[1])}return o.postMessage(e)}))}();
