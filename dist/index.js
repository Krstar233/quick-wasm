(function(f,c){typeof exports=="object"&&typeof module<"u"?c(exports):typeof define=="function"&&define.amd?define(["exports"],c):(f=typeof globalThis<"u"?globalThis:f||self,c(f.QuickWasmJS={}))})(this,function(f){"use strict";var c=typeof document<"u"?document.currentScript:null;function w(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}var d,m;function l(){if(m)return d;m=1;var n=0;function g(o,e){var s=e.data;if(!(!Array.isArray(s)||s.length<2)){var a=s[0],i=s[1],p=s[2],r=o._callbacks[a];r&&(delete o._callbacks[a],r(i,p))}}function u(o){var e=this;e._worker=o,e._callbacks={},o.addEventListener("message",function(s){g(e,s)})}return u.prototype.postMessage=function(o){var e=this,s=n++,a=[s,o];return new Promise(function(i,p){if(e._callbacks[s]=function(t,y){if(t)return p(new Error(t.message));i(y)},typeof e._worker.controller<"u"){var r=new MessageChannel;r.port1.onmessage=function(t){g(e,t)},e._worker.controller.postMessage(a,[r.port2])}else e._worker.postMessage(a)})},d=u,d}var A=l();const H=w(A);class M{constructor(){}async createManager(g,u){(()=>{const r=document.createElement("a");r.href=g,g=r.href,u&&(r.href=u,u=r.href)})();let e;const s=new Worker(new URL("/assets/worker-CIn8XKuM.js",typeof document>"u"&&typeof location>"u"?require("url").pathToFileURL(__filename).href:typeof document>"u"?location.href:c&&c.tagName.toUpperCase()==="SCRIPT"&&c.src||new URL("index.js",document.baseURI).href)),a=new H(s),i={createHEAP:async r=>(e={cmd:"createHeap",args:[new Int8Array(r)]},await a.postMessage(e)),createHEAP8:async r=>(e={cmd:"createHeap",args:[r]},await a.postMessage(e)),createHEAP16:async r=>(e={cmd:"createHeap",args:[new Int8Array(r.buffer)]},await a.postMessage(e)),createHEAP32:async r=>(e={cmd:"createHeap",args:[new Int8Array(r.buffer)]},await a.postMessage(e)),createHEAPF32:async r=>(e={cmd:"createHeap",args:[new Int8Array(r.buffer)]},await a.postMessage(e)),createHEAPF64:async r=>(e={cmd:"createHeap",args:[new Int8Array(r.buffer)]},await a.postMessage(e)),createHEAPU8:async r=>(e={cmd:"createHeap",args:[new Int8Array(r.buffer)]},await a.postMessage(e)),createHEAPU16:async r=>(e={cmd:"createHeap",args:[new Int8Array(r.buffer)]},await a.postMessage(e)),createHEAPU32:async r=>(e={cmd:"createHeap",args:[new Int8Array(r.buffer)]},await a.postMessage(e)),freeHEAP:async r=>(e={cmd:"freeHeap",args:[r]},await a.postMessage(e)),getHEAP:async(r,t)=>(e={cmd:"getHeap",args:[r,t]},(await a.postMessage(e)).buffer),getHEAP8:async(r,t)=>(e={cmd:"getHeap",args:[r,t]},await a.postMessage(e)),getHEAP16:async(r,t)=>(e={cmd:"getHeap",args:[r,t*2]},new Int16Array((await a.postMessage(e)).buffer)),getHEAP32:async(r,t)=>(e={cmd:"getHeap",args:[r,t*4]},new Int32Array((await a.postMessage(e)).buffer)),getHEAPF32:async(r,t)=>(e={cmd:"getHeap",args:[r,t*4]},new Float32Array((await a.postMessage(e)).buffer)),getHEAPF64:async(r,t)=>(e={cmd:"getHeap",args:[r,t*8]},new Float64Array((await a.postMessage(e)).buffer)),getHEAPU8:async(r,t)=>(e={cmd:"getHeap",args:[r,t]},new Uint8Array((await a.postMessage(e)).buffer)),getHEAPU16:async(r,t)=>(e={cmd:"getHeap",args:[r,t*2]},new Uint16Array((await a.postMessage(e)).buffer)),getHEAPU32:async(r,t)=>(e={cmd:"getHeap",args:[r,t*4]},new Uint32Array((await a.postMessage(e)).buffer))};return e={cmd:"load",args:[g,u]},await a.postMessage(e),e={cmd:"getKeys"},(await a.postMessage(e)).forEach(r=>{i[r]=async(...t)=>{const y={cmd:"call",args:[r,t]};return await a.postMessage(y)}}),i}}f.QuickWebAssemblyFactory=M,Object.defineProperty(f,Symbol.toStringTag,{value:"Module"})});
//# sourceMappingURL=index.js.map
